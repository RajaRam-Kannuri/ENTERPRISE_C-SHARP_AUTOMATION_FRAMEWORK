<Application x:Class="KWDT.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KWDT.UI"
             Startup="Application_Startup">
    <!--StartupUri="MainWindow.xaml">-->
    <Application.Resources>
        <!--<SolidColorBrush x:Key="baseButtonsColor" Color="#FFAA5FF5"/>
        <SolidColorBrush x:Key="baseButtonsTextColor" Color="White"/>
        <SolidColorBrush x:Key="backgroundColor" Color="#FF6219AC"/>-->
        <SolidColorBrush x:Key="tableBorderColor" Color="LightGray"/>

        <SolidColorBrush x:Key="baseButtonsColor" Color="LightGray"/>
        <SolidColorBrush x:Key="baseButtonsTextColor" Color="Black"/>
        <SolidColorBrush x:Key="backgroundColor" Color="White"/>

        <Style TargetType="Button" x:Key="baseButtonStyle">
            <Setter Property="Background" Value="{StaticResource baseButtonsColor}"/>
            <Setter Property="Foreground" Value="{StaticResource baseButtonsTextColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="25"/>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
            </Style.Triggers>-->

            <!--<Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding
                                   RelativeSource={
                                   RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}},
                                   Path=IsMouseOver}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Foreground" Value="Red"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                </MultiDataTrigger>
            </Style.Triggers>-->
        </Style>

        <Style TargetType="Button" x:Key="homePageButtonsStyle" BasedOn="{StaticResource baseButtonStyle}">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="75"/>
        </Style>

        <Style TargetType="Button" x:Key="navigationButtonStyle" BasedOn="{StaticResource baseButtonStyle}">
            <Setter Property="Width" Value="75"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="Button" x:Key="actionButtonStyle" BasedOn="{StaticResource baseButtonStyle}">
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{StaticResource tableBorderColor}" />
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Style.Triggers>
                <!--<Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="BorderBrush" Value="{StaticResource baseButtonsColor}" />
                    <Setter Property="BorderThickness" Value="2,2,2,2" />
                </Trigger>-->
                <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray" />
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderThickness" Value="0" />
                </Trigger>-->
            </Style.Triggers>
        </Style>

        <Style 
            x:Key="NoChromeButton" 
            TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
 